package form

var moneyFieldScript = templ.NewOnceHandle()

type TextFieldOpts struct {
	Label       string
	Type        string
	Placeholder string
	Id          string
	Name        string
	Value       string
	Required    bool
	ReadOnly    bool
	IsDanger    bool
}

templ TextField(opts TextFieldOpts) {
	<div class={ "field" }>
		if opts.Label != "" {
			<label class={ "label" }>{ opts.Label }</label>
		}
		<div class={ "control" }>
			<input
				if opts.IsDanger {
					class={ "input is-danger" }
				} else {
					class={ "input" }
				}
				if opts.Type != "" {
					type={ opts.Type }
				}
				name={ opts.Name }
				placeholder={ opts.Placeholder }
				id={ opts.Id }
				value={ opts.Value }
				if opts.Required {
					required
				}
				if opts.ReadOnly {
					readonly
				}
			/>
		</div>
	</div>
}

type MoneyFieldOpts struct {
	Label       string
	Id          string
	Name        string
	Placeholder string
	Value       string
	Currency    string

	Required bool
	ReadOnly bool
	IsDanger bool
}

templ MoneyField(opts MoneyFieldOpts) {
	<div class="control">
		if opts.Label != "" {
			<label class="label">{ opts.Label }</label>
		}
		<div class="control has-icons-right money-input">
			<input
				if opts.IsDanger {
					class="input is-danger"
				} else {
					class="input"
				}
				name={ opts.Name }
				id={ opts.Id }
				placeholder={ opts.Placeholder }
				if opts.Value != "" {
					value={ opts.Value }
				}
				if opts.Required {
					required
				}
				onchange="moneyFieldMaskOnChange(this)"
			/>
			if opts.Currency != "" {
				<span class="icon is-small is-right currency-symbol">{ opts.Currency }</span>
			}
		</div>
	</div>
	@moneyFieldScript.Once() {
		<script type="text/javascript">
			function moneyFieldMaskOnChange(field) {
				// TODO: implement this mask on change
			}
		</script>
	}
}
